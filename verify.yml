---
- name:  Configure BGP Unnumbered
  hosts: all
  sudo: yes
  tasks:

  # Downloaded from http://repo.cumulusnetworks.com/pool/CumulusLinux-2.5/updates/quagga_0.99.23.1-1+cl2.5+9_amd64.deb
  - name: Copy quagga package
    copy: src=packages/quagga.deb dest=/home/vagrant

  # Downloaded from http://repo.cumulusnetworks.com/pool/CumulusLinux-2.5/updates/python-clcmd_0.01-cl2.5+3_all.deb
  - name: Copy cl- command package
    copy: src=packages/python-clcmd.deb dest=/home/vagrant

  # Downloaded from http://archive.ubuntu.com/ubuntu/pool/universe/p/python-ipaddr/python-ipaddr_2.1.10-1_all.deb
  - name: Copy Python ipaddr
    copy: src=packages/python-ipaddr.deb dest=/home/vagrant

  - name: Install Python ipaddr
    apt: deb=/home/vagrant/python-ipaddr.deb 

  - name: Install cl- commands
    apt: deb=/home/vagrant/python-clcmd.deb
    notify: start clcmd_server

  - name: Create /usr/share/cumulus. Required for clcmd_server
    file: path=/usr/share/cumulus state=directory mode=0755

  - name: Install quagga
    apt: deb=/home/vagrant/quagga.deb force=yes

  - name: Fix dpkg status to prevent apt errors due to quagga. Remove iproute
    replace: dest=/var/lib/dpkg/status regexp='iproute,' replace=''

  - name: Fix dpkg status to prevent apt errors due to quagga. Remove cl-utilities
    replace: dest=/var/lib/dpkg/status regexp=', cl-utilities' replace=''

  - name: Enable bgpd and zebra
    replace: dest=/etc/quagga/daemons regexp='(bgpd|zebra)=no' replace='\1=yes' backup=yes
    notify: restart quagga

  - name: Start quagga and clcmd_server 
    meta: flush_handlers

  # - name: Assign Loopback ip
  #   lineinfile: dest=/etc/network/interfaces regexp="address {{loopback_ip}}" line="address {{loopback_ip}}/32" insertafter="iface lo inet loopback"
  #   notify: restart networking

  - name: Create Fabric ports 
      lineinfile: dest="/etc/network/interfaces.d/{{item}}.cfg" create=yes line="auto {{item}}\niface {{item}} inet manual"
      with_items:
        - swp1
        - swp2
      notify: restart networking

  - name: Create Fabric ports 
      lineinfile: dest="/etc/network/interfaces.d/{{item}}.cfg" create=yes line="auto {{item}}\niface {{item}} inet static\n address {{loopback_ip}}/32"
      with_items:
        - lo:1
      notify: restart networking

  # - name: Enable Physical Interfaces
  #   lineinfile: dest=/etc/network/interfaces regexp="{{item}}" line="{{item}}"
  #   with_items:
  #     - "auto eth1"
  #     - "iface eth1 inet manual"
  #     - "auto eth2"
  #     - "iface eth2 inet manual"
  #   notify: restart networking

  - name: Configure BGP ASN
    command: cl-bgp as {{asn}} router-id set {{loopback_ip}}

  - name: Configure Peer Group
    command: cl-bgp peer-group add TORs

  - name: Peer Group Settings
    command: "{{item}}"
    with_items:
      - cl-bgp neighbor add TORs remote-as external
      - cl-bgp timers set connect 1 neighbor TORs
      - cl-bgp timers set keepalive 1 holdtime 3 neighbor TORs
      - cl-bgp advertisement-interval set 0 neighbor TORs
      - cl-bgp maximum-paths set 16
      - cl-bgp bestpath set as-path multipath-relax
      - cl-bgp network add {{ loopback_ip }}/32
      - cl-bgp capability set extended-nexthop neighbor TORs
      - vtysh -c 'config t' -c 'ip prefix-list default-only permit 0.0.0.0/0'
      - vtysh -c 'config t' -c 'ip prefix-list loopback permit {{loopback_ip}}/32'

  - name: Configure BGP Peers
    command: "{{ item[0] | replace('%iface%', item[1]) }}"
    with_nested: 
      - ["cl-bgp interface add %iface%",
         "cl-bgp neighbor add %iface% peer-group TORs",
         "cl-rctl interface clear %iface% ipv6 nd suppress-ra",
         "cl-rctl interface set %iface% ipv6 nd ra-interval 5",
         "cl-rctl ip forwarding set",
         "cl-bgp prefix-list set default-only in neighbor %iface%",
         "cl-bgp prefix-list set loopback out neighbor %iface%"
        ]
      - fabric_ports

  - name: Save BGP Config
    command: cl-rctl write-config integrated

  - name: Delete eth0 default
    command: ip route del default dev eth0

  handlers:
    - name: start clcmd_server
      service: name=clcmd_server state=started enabled=yes

    - name: restart quagga
      service: name=quagga state=restarted

    - name: restart networking
      shell: "ifdown {{item}};ifup {{item}}"
      with_items: interface_list
